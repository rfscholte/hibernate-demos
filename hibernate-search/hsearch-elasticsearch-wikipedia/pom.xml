<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.hibernate.search.demos</groupId>
	<artifactId>hsearch-elasticsearch-wikipedia</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>hsearch-elasticsearch-wikipedia</name>
	<url>http://hibernate.org/search/</url>
	<description>Demonstrates how to use the Elasticsearch backend for Hibernate Search in a webapp</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.4</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<mapstruct.version>1.1.0.Final</mapstruct.version>
		<apt.version>1.1.3</apt.version>
		<docker-maven-plugin.version>0.34.1</docker-maven-plugin.version>
		<!-- Override the version of Hibernate ORM in Spring Boot -->
		<hibernate.version>5.6.5.Final</hibernate.version>
		<!-- Override the version of Elasticsearch Rest Client in Spring Boot -->
		<elasticsearch.version>7.16.3</elasticsearch.version>
		<hibernate.search.version>6.1.7.Final</hibernate.search.version>

		<docker-maven-plugin.version>0.34.1</docker-maven-plugin.version>
		<test.postgres.run.skip>true</test.postgres.run.skip>
		<test.postgres.run.image.name>postgres</test.postgres.run.image.name>
		<test.postgres.run.image.tag>13.1</test.postgres.run.image.tag>
		<test.elasticsearch.run.skip>true</test.elasticsearch.run.skip>
		<test.elasticsearch.run.image.name>elastic/elasticsearch</test.elasticsearch.run.image.name>
		<test.elasticsearch.run.image.tag>${elasticsearch.version}</test.elasticsearch.run.image.tag>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-jdk8</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.search</groupId>
			<artifactId>hibernate-search-mapper-orm</artifactId>
			<version>${hibernate.search.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.search</groupId>
			<artifactId>hibernate-search-backend-elasticsearch</artifactId>
			<version>${hibernate.search.version}</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>${apt.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.querydsl</groupId>
						<artifactId>querydsl-apt</artifactId>
						<version>${querydsl.version}</version>
					</dependency>
					<dependency>
						<groupId>org.mapstruct</groupId>
						<artifactId>mapstruct-processor</artifactId>
						<version>${mapstruct.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>
							<processors>
								<processor>org.mapstruct.ap.MappingProcessor</processor>
								<processor>com.querydsl.apt.hibernate.HibernateAnnotationProcessor</processor>
							</processors>
							<logOnlyOnError>true</logOnlyOnError>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
				<configuration>
					<skip>${test.containers.run.skip}</skip>
					<startParallel>true</startParallel>
					<images>
						<image>
							<name>${test.elasticsearch.run.image.name}:${test.elasticsearch.run.image.tag}</name>
							<alias>elasticsearch</alias>
							<run>
								<skip>${test.elasticsearch.run.skip}</skip>
								<env>
									<logger.level>WARN</logger.level>
									<discovery.type>single-node</discovery.type>
									<!-- Limit the RAM usage.
                                         Recent versions of ES limit themselves to 50% of the total available RAM,
                                         but on CI this is sometimes too much, as we also have the Maven JVM
                                         and the JVM that runs tests taking up a significant amount of RAM,
                                         leaving too little for filesystem caches and resulting in freezes.
                                     -->
									<ES_JAVA_OPTS>-Xms1g -Xmx1g</ES_JAVA_OPTS>
								</env>
								<ports>
									<port>9200:9200</port>
								</ports>
								<log>
									<prefix>Elasticsearch: </prefix>
									<date>default</date>
									<color>cyan</color>
								</log>
								<wait>
									<http>
										<url>http://localhost:9200</url>
										<method>GET</method>
										<status>200</status>
									</http>
									<time>20000</time>
								</wait>
							</run>
						</image>
						<image>
							<name>${test.postgres.run.image.name}:${test.postgres.run.image.tag}</name>
							<alias>postgres</alias>
							<run>
								<skip>${test.postgres.run.skip}</skip>
								<env>
									<POSTGRES_USER>hibernate_demo</POSTGRES_USER>
									<POSTGRES_PASSWORD>hibernate_demo</POSTGRES_PASSWORD>
									<POSTGRES_DB>hsearch_es_wikipedia</POSTGRES_DB>
								</env>
								<ports>
									<port>5432:5432</port>
								</ports>
								<log>
									<prefix>PostgreSQL: </prefix>
									<date>default</date>
									<color>blue</color>
								</log>
								<wait>
									<log>database system is ready to accept connections</log>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<!-- Stops all images currently running before starting them again.
								 Useful to stop processes still running from a previously failed integration test run.
								 Because this is invoked before the start goal,
								 this will stop all images defined in the configuration, not just those we will start.
								 -->
							<goal>stop</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>start-containers</id>
			<activation>
				<property>
					<name>start-containers</name>
					<value>!false</value>
				</property>
			</activation>
			<properties>
				<test.postgres.run.skip>false</test.postgres.run.skip>
				<test.elasticsearch.run.skip>false</test.elasticsearch.run.skip>
			</properties>
		</profile>
	</profiles>

</project>
